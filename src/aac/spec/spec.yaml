---
# root is a special case representing the root of the architecture model and
# not explicitly included in a model file
data:
  name: root
  fields:
    - name: import
      type: string[]
      description: |
        A list references to dependent models whose definitions should be
        available for use by the current model.
    - name: enum
      type: enum
      description: |
        A definition that represents an enumerated type of value.

        An example of when to use an `enum' is when you want to provide several
        different options for a single value.
    - name: data
      type: data
      description: |
        A definition that represents a data value.

        An example of when to use a `data' definition is when you want to define
        some part of the system that can be an input and/or output to another
        part of the system.
    - name: model
      type: model
      description: |
        A definition that represents a system and/or component model.

        An example of when to use a `model' is when you want to define the
        behavior for some component of the system.
    - name: usecase
      type: usecase
      description: |
        A definition that represents a usecase for the system.

        An example of when to use a `usecase' is when you want to define how the
        system might be used in a particular instance.
    - name: ext
      type: extension
      description: |
        A meta definition used for adding information to another definition.

        An example of when to use an `ext' is when you wish to add extra
        information to a model that isn't included in the core specification or
        the specification of any plugins you may have installed.

        You can extend any `enum' and `data' definition.
---
data:
  name: enum
  fields:
    - name: name
      type: string
      description: |
        The name of the enumeration.
    - name: values
      type: string[]
      description: |
        A list of strings that encompass the enumeration's possible values.
  required:
    - name
    - values
---
data:
  name: extension
  fields:
    - name: name
      type: string
      description: |
        The name of the extension.
    - name: type
      type: string
      description: |
        The name of the `data' or `enum' definition that this definition is
        extending.
    - name: enumExt
      type: EnumExtension
      description: |
        If extending an `enum' definition, this represents a list of the items
        to add to the `enum's `values' property.

        Note: Only one of `enumExt' and `dataExt' are valid per extension.

        See also, `EnumExtension'
    - name: dataExt
      type: DataExtension
      description: |
        If extending an `data' definition, this represents a list of the items
        to add to the `data's `fields' property.

        Note: Only one of `enumExt' and `dataExt' are valid per extension.

        See also, `DataExtension'
  required:
    - name
    - type
---
data:
  name: EnumExtension
  fields:
    - name: add
      type: string[]
      description: |
        The list of values to add to an `enum' extension.
  required:
    - add
---
data:
  name: DataExtension
  fields:
    - name: add
      type: Field[]
    - name: required
      type: string[]
  required:
    - add
---
data:
  name: Scenario
  fields:
    - name: scenario
      type: string
    - name: tags
      type: string[]
    - name: given
      type: string[]
    - name: when
      type: string[]
    - name: then
      type: string[]
  required:
    - scenario
    - when
    - then
---
enum:
  name: BehaviorType
  values:
    - pub-sub
    - request-response
    - startup
    - timer
---
enum:
  name: Primitives
  values:
    - string
    - int
    - number
    - bool
    - date
    - file
    - map
---
data:
  name: Field
  fields:
    - name: name
      type: string
    - name: type
      type: string
    - name: description
      type: string
  required:
    - name
    - type
---
data:
  name: data
  fields:
    - name: name
      type: string
    - name: fields
      type: Field[]
    - name: required
      type: string[]
  required:
    - name
    - fields
---
data:
  name: Behavior
  fields:
    - name: name
      type: string
    - name: type
      type: BehaviorType
    - name: description
      type: string
    - name: tags
      type: string[]
    - name: input
      type: Field[]
    - name: output
      type: Field[]
    - name: acceptance
      type: Scenario[]
  required:
    - name
    - type
---
data:
  name: model
  fields:
    - name: name
      type: string
    - name: description
      type: string
    - name: components
      type: Field[]
    - name: behavior
      type: Behavior[]
  required:
    - name
---
data:
  name: usecase
  fields:
    - name: name
      type: string
    - name: description
      type: string
    - name: participants
      type: Field[]
    - name: steps
      type: Step[]
  required:
    - name
    - participants
    - steps
---
data:
  name: Step
  fields:
    - name: step
      type: string
    - name: source
      type: string
    - name: target
      type: string
    - name: action
      type: string
    - name: if
      type: Branch
    - name: else
      type: Branch
    - name: loop
      type: Branch
---
data:
  name: Branch
  fields:
    - name: condition
      type: string
    - name: steps
      type: Step[]
  required:
    - condition
    - steps
